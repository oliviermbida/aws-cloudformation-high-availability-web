AWSTemplateFormatVersion: 2010-09-09

Description: Creates VPC security groups

Metadata:

  Authors:
    Description: Olivier Mbida (olivier.mbida@ai-uavsystems.com)

Parameters:
  SshAccessCidr:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Description: The CIDR IP range that is permitted to SSH to bastion instance. Note - a value of 0.0.0.0/0 will allow access from ANY IP address.
    Type: String
    Default: 0.0.0.0/0
  Vpc:
    AllowedPattern: ^(vpc-)([a-z0-9]{8}|[a-z0-9]{17})$
    Description: The Vpc Id of an existing Vpc.
    Type: AWS::EC2::VPC::Id
  VpcCidr:
    Description: CIDR block for the VPC
    Type: String
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.0.0/16
Resources:

  BastionSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for Bastion instances
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref SshAccessCidr
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref SshAccessCidr
      VpcId:
        !Ref Vpc
  WebAppSecurityGroup:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupDescription: Security group for WebApp instances
        SecurityGroupIngress:
          - IpProtocol: tcp
            FromPort: 80
            ToPort: 80
            CidrIp: !Ref VpcCidr
          - IpProtocol: tcp
            FromPort: 443
            ToPort: 443
            CidrIp: !Ref VpcCidr
          - IpProtocol: tcp
            FromPort: 22
            ToPort: 22
            CidrIp: !Ref VpcCidr
          - IpProtocol: tcp
            FromPort: 1024
            ToPort: 65535
            CidrIp: 0.0.0.0/0
          - IpProtocol: udp
            FromPort: 1024
            ToPort: 65535
            CidrIp: 0.0.0.0/0  
        SecurityGroupEgress:
          - IpProtocol: tcp
            FromPort: 80
            ToPort: 80
            CidrIp: 0.0.0.0/0
          - IpProtocol: tcp
            FromPort: 443
            ToPort: 443
            CidrIp: 0.0.0.0/0
          - IpProtocol: tcp
            FromPort: 22
            ToPort: 22
            CidrIp: !Ref VpcCidr
          - IpProtocol: tcp
            FromPort: 1024
            ToPort: 65535
            CidrIp: !Ref VpcCidr
          - IpProtocol: udp
            FromPort: 1024
            ToPort: 65535
            CidrIp: !Ref VpcCidr
        VpcId:
          !Ref Vpc
Outputs:
  BastionSecurityGroup:
    Value: !Ref BastionSecurityGroup
    Export:
      Name: 
        Fn::Sub: "${AWS::StackName}-BastionSecurityGroup"
  WebAppSecurityGroup:
    Value: !Ref WebAppSecurityGroup
    Export:
      Name: 
        Fn::Sub: "${AWS::StackName}-WebAppSecurityGroup"
